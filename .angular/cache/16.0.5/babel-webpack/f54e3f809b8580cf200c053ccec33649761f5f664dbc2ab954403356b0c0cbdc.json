{"ast":null,"code":"import { ActionTypes } from '../types/types';\nimport { createReducer } from '@ngrx/store';\n// //create a dummy initial state\nconst test = [{\n  \"id\": 1,\n  \"name\": \"Leanne Graham\",\n  \"username\": \"Bret\",\n  \"email\": \"Sincere@april.biz\",\n  \"address\": {\n    \"street\": \"Kulas Light\",\n    \"suite\": \"Apt. 556\",\n    \"city\": \"Gwenborough\",\n    \"zipcode\": \"92998-3874\",\n    \"geo\": {\n      \"lat\": \"-37.3159\",\n      \"lng\": \"81.1496\"\n    }\n  },\n  \"phone\": \"1-770-736-8031 x56442\",\n  \"website\": \"hildegard.org\",\n  \"company\": {\n    \"name\": \"Romaguera-Crona\",\n    \"catchPhrase\": \"Multi-layered client-server neural-net\",\n    \"bs\": \"harness real-time e-markets\"\n  }\n}];\nconst initialState = test;\nexport function UserReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.UPDATE_USERS_DATA:\n      return state;\n    default:\n      {\n        return state;\n      }\n  }\n}\nexport const reducer = createReducer(UserReducer);","map":{"version":3,"names":["ActionTypes","createReducer","test","initialState","UserReducer","state","action","type","UPDATE_USERS_DATA","reducer"],"sources":["/Users/fabiolalombardi/Desktop/user-registry/src/app/store/reducers/users.reducer.ts"],"sourcesContent":["// // import the interface\nimport { User } from 'src/app/models/User.model';\nimport { ActionTypes } from '../types/types';\nimport { UserAction } from '../actions/users.action';\nimport { Action, createReducer } from '@ngrx/store';\n// //create a dummy initial state\n\nconst test: User[] =  [\n    {\n        \"id\": 1,\n        \"name\": \"Leanne Graham\",\n        \"username\": \"Bret\",\n        \"email\": \"Sincere@april.biz\",\n        \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n                \"lat\": \"-37.3159\",\n                \"lng\": \"81.1496\"\n            }\n        },\n        \"phone\": \"1-770-736-8031 x56442\",\n        \"website\": \"hildegard.org\",\n        \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n        }\n    }\n]\n\nconst initialState: User[] = test\n\nexport function UserReducer(\n    state = initialState,\n    action: Action\n) {\n    switch (action.type) {\n        case ActionTypes.UPDATE_USERS_DATA:\n            return state\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const reducer = createReducer(UserReducer)\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,gBAAgB;AAE5C,SAAiBC,aAAa,QAAQ,aAAa;AACnD;AAEA,MAAMC,IAAI,GAAY,CAClB;EACI,IAAI,EAAE,CAAC;EACP,MAAM,EAAE,eAAe;EACvB,UAAU,EAAE,MAAM;EAClB,OAAO,EAAE,mBAAmB;EAC5B,SAAS,EAAE;IACP,QAAQ,EAAE,aAAa;IACvB,OAAO,EAAE,UAAU;IACnB,MAAM,EAAE,aAAa;IACrB,SAAS,EAAE,YAAY;IACvB,KAAK,EAAE;MACH,KAAK,EAAE,UAAU;MACjB,KAAK,EAAE;;GAEd;EACD,OAAO,EAAE,uBAAuB;EAChC,SAAS,EAAE,eAAe;EAC1B,SAAS,EAAE;IACP,MAAM,EAAE,iBAAiB;IACzB,aAAa,EAAE,wCAAwC;IACvD,IAAI,EAAE;;CAEb,CACJ;AAED,MAAMC,YAAY,GAAWD,IAAI;AAEjC,OAAM,SAAUE,WAAWA,CACvBC,KAAK,GAAGF,YAAY,EACpBG,MAAc;EAEd,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKP,WAAW,CAACQ,iBAAiB;MAC9B,OAAOH,KAAK;IAChB;MAAS;QACL,OAAOA,KAAK;;EACf;AAET;AAEA,OAAO,MAAMI,OAAO,GAAGR,aAAa,CAACG,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}