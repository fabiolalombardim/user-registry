{"ast":null,"code":"import { UpdateUserAction } from 'src/app/store/actions/users.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/dashboard.service\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/common\";\nfunction DashboardComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"b\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const course_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", course_r1.id, \": \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(course_r1.email);\n  }\n}\nclass DashboardComponent {\n  constructor(dashboardService, store) {\n    this.dashboardService = dashboardService;\n    this.store = store;\n  }\n  ngOnInit() {\n    this.users$ = this.store.select(\"users\");\n    this.loadUsers();\n  }\n  loadUsers() {\n    this.dashboardService.loadUsers().subscribe(data => {\n      this.store.dispatch(new UpdateUserAction(data));\n    });\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.DashboardService), i0.ɵɵdirectiveInject(i2.Store));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 6,\n  vars: 3,\n  consts: [[1, \"col-md-6\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"dashboard works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"ul\", 1);\n      i0.ɵɵtemplate(4, DashboardComponent_li_4_Template, 4, 2, \"li\", 2);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 1, ctx.users$));\n    }\n  },\n  dependencies: [i3.NgForOf, i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { DashboardComponent };","map":{"version":3,"names":["UpdateUserAction","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","course_r1","id","ɵɵtextInterpolate","email","DashboardComponent","constructor","dashboardService","store","ngOnInit","users$","select","loadUsers","subscribe","data","dispatch","ɵɵdirectiveInject","i1","DashboardService","i2","Store","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵtemplate","DashboardComponent_li_4_Template","ɵɵproperty","ɵɵpipeBind1"],"sources":["/Users/fabiolalombardi/Desktop/user-registry/src/app/components/dashboard/dashboard.component.ts","/Users/fabiolalombardi/Desktop/user-registry/src/app/components/dashboard/dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/models/User.model';\nimport { AppState } from 'src/app/models/app.state.model';\nimport { DashboardService } from 'src/app/services/dashboard.service';\nimport { UpdateUserAction } from 'src/app/store/actions/users.action';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent {\n\n  users$: Observable<Array<User>> | undefined;\n\n  constructor(private readonly dashboardService: DashboardService, private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.users$ = this.store.select(\"users\");\n    this.loadUsers()\n  }\n\n  loadUsers() {\n    this.dashboardService.loadUsers()\n      .subscribe((data: User[]) => {\n        this.store.dispatch(new UpdateUserAction(data) )\n      })\n  };\n}\n\n","<p>dashboard works!</p>\n\n<div class=\"col-md-6\">\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\" *ngFor=\"let course of users$ | async\">\n        {{course.id}}: <b>{{course.email}}</b>\n      </li>\n\n    </ul>\n  </div>\n"],"mappings":"AAMA,SAASA,gBAAgB,QAAQ,oCAAoC;;;;;;;ICF/DC,EAAA,CAAAC,cAAA,YAAkE;IAChED,EAAA,CAAAE,MAAA,GAAe;IAAAF,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAAtCH,EAAA,CAAAI,SAAA,GAAe;IAAfJ,EAAA,CAAAK,kBAAA,MAAAC,SAAA,CAAAC,EAAA,OAAe;IAAGP,EAAA,CAAAI,SAAA,GAAgB;IAAhBJ,EAAA,CAAAQ,iBAAA,CAAAF,SAAA,CAAAG,KAAA,CAAgB;;;ADG1C,MAKaC,kBAAkB;EAI7BC,YAA6BC,gBAAkC,EAAUC,KAAsB;IAAlE,KAAAD,gBAAgB,GAAhBA,gBAAgB;IAA4B,KAAAC,KAAK,GAALA,KAAK;EAAqB;EAEnGC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,KAAK,CAACG,MAAM,CAAC,OAAO,CAAC;IACxC,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACL,gBAAgB,CAACK,SAAS,EAAE,CAC9BC,SAAS,CAAEC,IAAY,IAAI;MAC1B,IAAI,CAACN,KAAK,CAACO,QAAQ,CAAC,IAAIrB,gBAAgB,CAACoB,IAAI,CAAC,CAAE;IAClD,CAAC,CAAC;EACN;;AAhBWT,kBAAkB,C;mBAAlBA,kBAAkB,EAAAV,EAAA,CAAAqB,iBAAA,CAAAC,EAAA,CAAAC,gBAAA,GAAAvB,EAAA,CAAAqB,iBAAA,CAAAG,EAAA,CAAAC,KAAA;AAAA;AAAlBf,kBAAkB,C;QAAlBA,kBAAkB;EAAAgB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCb/BhC,EAAA,CAAAC,cAAA,QAAG;MAAAD,EAAA,CAAAE,MAAA,uBAAgB;MAAAF,EAAA,CAAAG,YAAA,EAAI;MAEvBH,EAAA,CAAAC,cAAA,aAAsB;MAEhBD,EAAA,CAAAkC,UAAA,IAAAC,gCAAA,gBAEK;;MAEPnC,EAAA,CAAAG,YAAA,EAAK;;;MAJ4CH,EAAA,CAAAI,SAAA,GAAiB;MAAjBJ,EAAA,CAAAoC,UAAA,YAAApC,EAAA,CAAAqC,WAAA,OAAAJ,GAAA,CAAAlB,MAAA,EAAiB;;;;;;SDSzDL,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}